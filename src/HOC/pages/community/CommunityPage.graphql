#import "HOC/modules/HeroCommunity/getHeroCommunity.graphql"
#import "HOC/modules/ActivityPreview/getActivityPreview.graphql"
#import "HOC/modules/CollectionPreview/CollectionPreview.graphql"

query communityPage($id: String!) {
  community(communityId:$id){
    ...HeroCommunityData
    collections{
      edges{
        node{
          ...CollectionPreviewData
        }
      }
    }
    outbox{
      edges{
        node{
          ...ActivityPreviewData
        }
      }
    }
    threads(limit:1){
      edges{
        node{
          ...ComunityPageThread
        }
      }
    }
  }
}

fragment ComunityPageThread on Thread {
  ...ActivityPreviewExtendedThread
  comments{
    edges{
      node{
        ...ActivityPreviewCommentCtxExtended
        createdAt
      }
    }
  }
}

mutation communityPageCreateThread($contextId: String!, $comment: CommentInput!) {
    createThread(comment:$comment, contextId: $contextId){
        thread{
          id
        }
    }
}

mutation communityPageThreadLike($contextId: String!) {
    createLike(contextId: $contextId){
        ...ActivityPreviewLikeCtx
    }
}

mutation communityPageThreadUnlike($contextId: String!) {
    delete(contextId: $contextId){
        __typename
    }
}


mutation communityPageThreadCreateReply( $comment: CommentInput!, $inReplyToId: String!, $threadId: String!) {
    createReply(comment: $comment, inReplyToId: $inReplyToId, threadId: $threadId){
        ...ActivityPreviewCommentCtxBase
    }
}

